plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group 'me.q1zz.combatlog'
version '0.1'

repositories {
    mavenCentral()

    maven {url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'}
    maven {url = "https://storehouse.okaeri.eu/repository/maven-public/" }
    maven {url = "https://repo.panda-lang.org/releases" }
    maven {url = "https://maven.enginehub.org/repo/" }

}

dependencies {

    // Spigot API
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'

    // Configuration
    implementation 'eu.okaeri:okaeri-configs-yaml-bukkit:5.0.0-beta.5'
    implementation 'eu.okaeri:okaeri-configs-serdes-commons:5.0.0-beta.5'

    // Adventure (messages)
    implementation 'net.kyori:adventure-platform-bukkit:4.3.2'
    implementation 'net.kyori:adventure-text-minimessage:4.16.0'

    // Commands
    implementation 'dev.rollczi:litecommands-bukkit:3.4.0'

    // WorldGuard API
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.9'

    // Annotations
    implementation 'org.jetbrains:annotations:24.1.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

shadowJar {
    archiveFileName = "q1zZ-CombatLog-${project.version}.jar"

    exclude(
            "org/checkerframework/**",
            "META-INF/**",
            "javax/**"
    )

    relocate("eu.okaeri", "me.q1zz.combatlog.libs.eu.okaeri")
    relocate("dev.rollczi", "me.q1zz.combatlog.libs.dev.rollczi")
    relocate("panda.std", "me.q1zz.combatlog.libs.panda.std")
    relocate("net.kyori", "me.q1zz.combatlog.libs.net.kyori")
    relocate("org.jetbrains", "me.q1zz.combatlog.libs.org.jetbrains")
    relocate("org.intellij", "me.q1zz.combatlog.libs.org.intellij")
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add("-parameters")
}